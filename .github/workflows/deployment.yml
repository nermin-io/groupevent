name: CICD

on:
  push:
    branches: [ main ]

  workflow_dispatch:

env:
  DEV_DATABASE_PASSWORD: ${{ secrets.DEV_DATABASE_PASSWORD }}
  DEV_DATABASE_USERNAME: ${{ secrets.DEV_DATABASE_USERNAME }}
  ENCRYPTION_SALT: ${{ secrets.ENCRYPTION_SALT }}
  ENCRYPTION_SECRET: ${{ secrets.ENCRYPTION_SECRET }}
  GOOGLE_STATIC_MAPS_API_KEY: ${{ secrets.GOOGLE_STATIC_MAPS_API_KEY }}
  GOOGLE_STATIC_MAPS_SIGNING_SECRET: ${{ secrets.GOOGLE_STATIC_MAPS_SIGNING_SECRET }}
  HTTP_API_KEY: ${{ secrets.HTTP_API_KEY }}
  DEV_JDBC_URL: ${{ secrets.DEV_JDBC_URL }}
  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  SENDGRID_EVENT_CANCELLED_TEMPLATE_ID: ${{ secrets.SENDGRID_EVENT_CANCELLED_TEMPLATE_ID }}
  SENDGRID_EVENT_CONFIRMATION_TEMPLATE_ID: ${{ secrets.SENDGRID_EVENT_CONFIRMATION_TEMPLATE_ID }}
  SENDGRID_EVENT_INVITE_TEMPLATE_ID: ${{ secrets.SENDGRID_EVENT_INVITE_TEMPLATE_ID }}
  SENDGRID_EVENT_RESCHEDULED_TEMPLATE_ID: ${{ secrets.SENDGRID_EVENT_RESCHEDULED_TEMPLATE_ID }}
  SENDGRID_INVITE_RESPONSE_TEMPLATE_ID: ${{ secrets.SENDGRID_INVITE_RESPONSE_TEMPLATE_ID }}
  SENDGRID_MAGIC_LINK_TEMPLATE_ID: ${{ secrets.SENDGRID_MAGIC_LINK_TEMPLATE_ID }}
  JAVA_VERSION: 17

  DOCKER_HUB_USERNAME: nsehic

  AWS_REGION: ap-southeast-2
  EB_ENVIRONMENT_NAME: groupevent-api-env
  EB_APPLICATION_NAME: groupevent-api
  EB_DEPLOYMENT_PACKAGE: docker-compose.yml

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: groupevent
          POSTGRES_USER: ${{ env.DEV_DATABASE_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DEV_DATABASE_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build Number
        id: build-number
        run: echo "::set-output name=BUILD_NUMBER::$(date '+%-d.%-m.%Y.%-H.%-M.%-S')"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Maven Build and Push to Dockerhub
        run: |
          ./mvnw --no-transfer-progress clean package \
            -P jib-push-to-docker \
              -Dapp.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}}

      - name: Package docker-compose File
        run: zip -r deploy.zip docker-compose.yml -x '*.git*'

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          deployment_package: deploy.zip
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: Version ${{steps.build-number.outputs.BUILD_NUMBER}} deployed via Github Actions ${{ github.sha }}
          wait_for_deployment: 60
